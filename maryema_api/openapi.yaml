swagger: "2.0"
info:
  title: Snippets API
  description: Test description
  termsOfService: https://www.google.com/policies/terms/
  contact:
    email: contact@snippets.local
  license:
    name: BSD License
  version: v1
host: 127.0.0.1:8000
schemes:
  - http
basePath: /api
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  Basic:
    type: basic
security:
  - Basic: []
paths:
  /auth/change-password/:
    post:
      operationId: auth_change-password_create
      description: This view changes the current user's password
      parameters: []
      responses:
        "201":
          description: ""
        "403":
          description: "missing old password or new password,\n wrong old password"
        "401":
          description: "Unauthorized"
      tags:
        - auth
    parameters: []
  /auth/login/:
    post:
      operationId: auth_login_create
      description: |-
        Handle user login by providing JWT tokens in cookies.
        Implements secure token storage using HTTP-only cookies.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/TokenObtainPair"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/TokenObtainPair"
      tags:
        - auth
    parameters: []
  /auth/logout/:
    post:
      operationId: auth_logout_create
      description: ""
      parameters: []
      responses:
        "201":
          description: ""
      tags:
        - auth
    parameters: []
  /auth/me/:
    get:
      operationId: auth_me_list
      description:
        This view returns the current user's information for the profile
        page
      parameters: []
      responses:
        "200":
          description: ""
      tags:
        - auth
    patch:
      operationId: auth_me_partial_update
      description:
        This view updates the current user's information in the profile
        page
      parameters: []
      responses:
        "200":
          description: ""
      tags:
        - auth
    delete:
      operationId: auth_me_delete
      description: This view deletes the current user's account
      parameters: []
      responses:
        "204":
          description: ""
      tags:
        - auth
    parameters: []
  /auth/refresh/:
    post:
      operationId: auth_refresh_create
      description: |-
        Handle token refresh requests by validating refresh token from cookies
        and providing a new access token.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/TokenRefresh"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/TokenRefresh"
      tags:
        - auth
    parameters: []
  /auth/register/:
    post:
      operationId: auth_register_create
      description: ""
      parameters: []
      responses:
        "201":
          description: ""
      tags:
        - auth
    parameters: []
  /cart/:
    get:
      operationId: cart_list
      summary: Retrieves the current user's current active cart.
      description: If there is no active cart, a new one is created
      parameters: []
      responses:
        "200":
          description: ""
      tags:
        - cart
    parameters: []
  /cart/add/:
    post:
      operationId: cart_add_create
      summary: Adds an item to the current user's active cart.
      description:
        If there is no active cart, a new one is created and add the item
        to it.
      parameters: []
      responses:
        "201":
          description: ""
      tags:
        - cart
    parameters: []
  /cart/checkout/:
    post:
      operationId: cart_checkout_create
      description: Checks out the current user's active cart
      parameters: []
      responses:
        "201":
          description: ""
      tags:
        - cart
    parameters: []
  /cart/clear/:
    delete:
      operationId: cart_clear_delete
      summary: Clears the current user's active cart.
      description:
        If there is no active cart, a new one is created which will be
        already empty
      parameters: []
      responses:
        "204":
          description: ""
      tags:
        - cart
    parameters: []
  /cart/item/{id}/:
    patch:
      operationId: cart_item_partial_update
      description: Updates the quantity of a cart item
      parameters: []
      responses:
        "200":
          description: ""
      tags:
        - cart
    delete:
      operationId: cart_item_delete
      description: Deletes a cart item
      parameters: []
      responses:
        "204":
          description: ""
      tags:
        - cart
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /categories/:
    get:
      operationId: categories_list
      summary: A viewset for the Category model
      description:
        It allows all users to read the categories but only admin users
        can create, update or delete them
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
      responses:
        "200":
          description: ""
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: "#/definitions/Category"
      tags:
        - categories
    post:
      operationId: categories_create
      summary: A viewset for the Category model
      description:
        It allows all users to read the categories but only admin users
        can create, update or delete them
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/Category"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/Category"
      tags:
        - categories
    parameters: []
  /categories/{id}/:
    get:
      operationId: categories_read
      summary: A viewset for the Category model
      description:
        It allows all users to read the categories but only admin users
        can create, update or delete them
      parameters: []
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Category"
      tags:
        - categories
    put:
      operationId: categories_update
      summary: A viewset for the Category model
      description:
        It allows all users to read the categories but only admin users
        can create, update or delete them
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/Category"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Category"
      tags:
        - categories
    patch:
      operationId: categories_partial_update
      summary: A viewset for the Category model
      description:
        It allows all users to read the categories but only admin users
        can create, update or delete them
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/Category"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Category"
      tags:
        - categories
    delete:
      operationId: categories_delete
      summary: A viewset for the Category model
      description:
        It allows all users to read the categories but only admin users
        can create, update or delete them
      parameters: []
      responses:
        "204":
          description: ""
      tags:
        - categories
    parameters:
      - name: id
        in: path
        description: A UUID string identifying this Category.
        required: true
        type: string
        format: uuid
  /collections/:
    get:
      operationId: collections_list
      summary: A viewset for the Collection model
      description: |-
        Only admin user can perform write actions on this model.

        Different schemas are used for read and write actions.
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
      responses:
        "200":
          description: ""
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: "#/definitions/ReadCollection"
      tags:
        - collections
    post:
      operationId: collections_create
      summary: A viewset for the Collection model
      description: |-
        Only admin user can perform write actions on this model.

        Different schemas are used for read and write actions.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/WriteCollection"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/WriteCollection"
      tags:
        - collections
    parameters: []
  /collections/{id}/:
    get:
      operationId: collections_read
      summary: A viewset for the Collection model
      description: |-
        Only admin user can perform write actions on this model.

        Different schemas are used for read and write actions.
      parameters: []
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/ReadCollection"
      tags:
        - collections
    put:
      operationId: collections_update
      summary: A viewset for the Collection model
      description: |-
        Only admin user can perform write actions on this model.

        Different schemas are used for read and write actions.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/WriteCollection"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/WriteCollection"
      tags:
        - collections
    patch:
      operationId: collections_partial_update
      summary: A viewset for the Collection model
      description: |-
        Only admin user can perform write actions on this model.

        Different schemas are used for read and write actions.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/WriteCollection"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/WriteCollection"
      tags:
        - collections
    delete:
      operationId: collections_delete
      summary: A viewset for the Collection model
      description: |-
        Only admin user can perform write actions on this model.

        Different schemas are used for read and write actions.
      parameters: []
      responses:
        "204":
          description: ""
      tags:
        - collections
    parameters:
      - name: id
        in: path
        description: A UUID string identifying this Collection.
        required: true
        type: string
        format: uuid
  /colors/:
    get:
      operationId: colors_list
      summary: A viewset for the Color model
      description:
        It allows all users to read the colors but only admin users can
        create, update or delete them
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
      responses:
        "200":
          description: ""
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: "#/definitions/Color"
      tags:
        - colors
    post:
      operationId: colors_create
      summary: A viewset for the Color model
      description:
        It allows all users to read the colors but only admin users can
        create, update or delete them
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/Color"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/Color"
      tags:
        - colors
    parameters: []
  /colors/{id}/:
    get:
      operationId: colors_read
      summary: A viewset for the Color model
      description:
        It allows all users to read the colors but only admin users can
        create, update or delete them
      parameters: []
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Color"
      tags:
        - colors
    put:
      operationId: colors_update
      summary: A viewset for the Color model
      description:
        It allows all users to read the colors but only admin users can
        create, update or delete them
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/Color"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Color"
      tags:
        - colors
    patch:
      operationId: colors_partial_update
      summary: A viewset for the Color model
      description:
        It allows all users to read the colors but only admin users can
        create, update or delete them
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/Color"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Color"
      tags:
        - colors
    delete:
      operationId: colors_delete
      summary: A viewset for the Color model
      description:
        It allows all users to read the colors but only admin users can
        create, update or delete them
      parameters: []
      responses:
        "204":
          description: ""
      tags:
        - colors
    parameters:
      - name: id
        in: path
        description: A UUID string identifying this Color.
        required: true
        type: string
        format: uuid
  /divisions/:
    get:
      operationId: divisions_list
      summary: A viewset for the Division model
      description:
        It allows all users to read the divisions but only admin users
        can create, update or delete them
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
      responses:
        "200":
          description: ""
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: "#/definitions/Division"
      tags:
        - divisions
    post:
      operationId: divisions_create
      summary: A viewset for the Division model
      description:
        It allows all users to read the divisions but only admin users
        can create, update or delete them
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/Division"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/Division"
      tags:
        - divisions
    parameters: []
  /divisions/{id}/:
    get:
      operationId: divisions_read
      summary: A viewset for the Division model
      description:
        It allows all users to read the divisions but only admin users
        can create, update or delete them
      parameters: []
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Division"
      tags:
        - divisions
    put:
      operationId: divisions_update
      summary: A viewset for the Division model
      description:
        It allows all users to read the divisions but only admin users
        can create, update or delete them
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/Division"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Division"
      tags:
        - divisions
    patch:
      operationId: divisions_partial_update
      summary: A viewset for the Division model
      description:
        It allows all users to read the divisions but only admin users
        can create, update or delete them
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/Division"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Division"
      tags:
        - divisions
    delete:
      operationId: divisions_delete
      summary: A viewset for the Division model
      description:
        It allows all users to read the divisions but only admin users
        can create, update or delete them
      parameters: []
      responses:
        "204":
          description: ""
      tags:
        - divisions
    parameters:
      - name: id
        in: path
        description: A UUID string identifying this Division.
        required: true
        type: string
        format: uuid
  /feedback/:
    get:
      operationId: feedback_list
      description: ""
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
      responses:
        "200":
          description: ""
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: "#/definitions/Feedback"
      tags:
        - feedback
    post:
      operationId: feedback_create
      description: ""
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/Feedback"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/Feedback"
      tags:
        - feedback
    parameters: []
  /feedback/{id}/:
    get:
      operationId: feedback_read
      description: ""
      parameters: []
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Feedback"
      tags:
        - feedback
    put:
      operationId: feedback_update
      description: ""
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/Feedback"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Feedback"
      tags:
        - feedback
    patch:
      operationId: feedback_partial_update
      description: ""
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/Feedback"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Feedback"
      tags:
        - feedback
    delete:
      operationId: feedback_delete
      description: ""
      parameters: []
      responses:
        "204":
          description: ""
      tags:
        - feedback
    parameters:
      - name: id
        in: path
        description: A UUID string identifying this Feedback.
        required: true
        type: string
        format: uuid
  /imgs/:
    get:
      operationId: imgs_list
      summary: A viewset for the Img model
      description:
        It allows all users to read the images but only admin users can
        create, update or delete them
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
      responses:
        "200":
          description: ""
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: "#/definitions/Img"
      tags:
        - imgs
    post:
      operationId: imgs_create
      summary: A viewset for the Img model
      description:
        It allows all users to read the images but only admin users can
        create, update or delete them
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/Img"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/Img"
      tags:
        - imgs
    parameters: []
  /imgs/{id}/:
    get:
      operationId: imgs_read
      summary: A viewset for the Img model
      description:
        It allows all users to read the images but only admin users can
        create, update or delete them
      parameters: []
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Img"
      tags:
        - imgs
    put:
      operationId: imgs_update
      summary: A viewset for the Img model
      description:
        It allows all users to read the images but only admin users can
        create, update or delete them
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/Img"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Img"
      tags:
        - imgs
    patch:
      operationId: imgs_partial_update
      summary: A viewset for the Img model
      description:
        It allows all users to read the images but only admin users can
        create, update or delete them
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/Img"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Img"
      tags:
        - imgs
    delete:
      operationId: imgs_delete
      summary: A viewset for the Img model
      description:
        It allows all users to read the images but only admin users can
        create, update or delete them
      parameters: []
      responses:
        "204":
          description: ""
      tags:
        - imgs
    parameters:
      - name: id
        in: path
        description: A UUID string identifying this Image.
        required: true
        type: string
        format: uuid
  /order/item/{id}/:
    patch:
      operationId: order_item_partial_update
      description: ""
      parameters: []
      responses:
        "200":
          description: ""
      tags:
        - order
    delete:
      operationId: order_item_delete
      description: ""
      parameters: []
      responses:
        "204":
          description: ""
      tags:
        - order
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /orders/:
    get:
      operationId: orders_list
      description: ""
      parameters:
        - name: search
          in: query
          description: A search term.
          required: false
          type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
      responses:
        "200":
          description: ""
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: "#/definitions/Order"
      tags:
        - orders
    post:
      operationId: orders_create
      description: Create a new order
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/Order"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/Order"
      tags:
        - orders
    parameters: []
  /orders/{id}/:
    get:
      operationId: orders_read
      description: ""
      parameters: []
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Order"
      tags:
        - orders
    put:
      operationId: orders_update
      description: ""
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/Order"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Order"
      tags:
        - orders
    patch:
      operationId: orders_partial_update
      description: ""
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/Order"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Order"
      tags:
        - orders
    delete:
      operationId: orders_delete
      description: ""
      parameters: []
      responses:
        "204":
          description: ""
      tags:
        - orders
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /orders/{id}/add-item/:
    post:
      operationId: orders_add_item
      description: Add an item to the order
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/Order"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/Order"
      tags:
        - orders
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /orders/{id}/cancel/:
    post:
      operationId: orders_cancel
      description: Cancel the order
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/Order"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/Order"
      tags:
        - orders
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /orders/{id}/close/:
    post:
      operationId: orders_close
      description: Close the order
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/Order"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/Order"
      tags:
        - orders
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /orders/{id}/process/:
    post:
      operationId: orders_process
      description: Change the status of the order to processing
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/Order"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/Order"
      tags:
        - orders
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /products/:
    get:
      operationId: products_list
      summary:
        "A viewset for the Product model that provides the following <b>extra</b>
        actions:"
      description: |-
        - `feedback`: Get or add feedbacks for a product

        It also, provides different serializers based on user type and action
      parameters:
        - name: category
          in: query
          description: category
          required: false
          type: string
        - name: collection
          in: query
          description: collection
          required: false
          type: string
        - name: division
          in: query
          description: division
          required: false
          type: string
        - name: color_name
          in: query
          description: color_name
          required: false
          type: string
        - name: color_value
          in: query
          description: color_value
          required: false
          type: string
        - name: min_price
          in: query
          description: min_price
          required: false
          type: string
        - name: max_price
          in: query
          description: max_price
          required: false
          type: string
        - name: size
          in: query
          description: size
          required: false
          type: string
        - name: search
          in: query
          description: A search term.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
      responses:
        "200":
          description: ""
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: "#/definitions/ProductListPublic"
      tags:
        - products
    post:
      operationId: products_create
      summary:
        "A viewset for the Product model that provides the following <b>extra</b>
        actions:"
      description: |-
        - `feedback`: Get or add feedbacks for a product

        It also, provides different serializers based on user type and action
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/ProductDetailPublic"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/ProductDetailPublic"
      tags:
        - products
    parameters: []
  /products/{id}/:
    get:
      operationId: products_read
      summary:
        "A viewset for the Product model that provides the following <b>extra</b>
        actions:"
      description: |-
        - `feedback`: Get or add feedbacks for a product

        It also, provides different serializers based on user type and action
      parameters: []
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/ProductDetailPublic"
      tags:
        - products
    put:
      operationId: products_update
      summary:
        "A viewset for the Product model that provides the following <b>extra</b>
        actions:"
      description: |-
        - `feedback`: Get or add feedbacks for a product

        It also, provides different serializers based on user type and action
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/ProductDetailPublic"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/ProductDetailPublic"
      tags:
        - products
    patch:
      operationId: products_partial_update
      summary:
        "A viewset for the Product model that provides the following <b>extra</b>
        actions:"
      description: |-
        - `feedback`: Get or add feedbacks for a product

        It also, provides different serializers based on user type and action
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/ProductDetailPublic"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/ProductDetailPublic"
      tags:
        - products
    delete:
      operationId: products_delete
      summary:
        "A viewset for the Product model that provides the following <b>extra</b>
        actions:"
      description: |-
        - `feedback`: Get or add feedbacks for a product

        It also, provides different serializers based on user type and action
      parameters: []
      responses:
        "204":
          description: ""
      tags:
        - products
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /products/{id}/feedback/:
    get:
      operationId: products_feedback_read
      summary:
        "A viewset for the Product model that provides the following <b>extra</b>
        actions:"
      description: |-
        - `feedback`: Get or add feedbacks for a product

        It also, provides different serializers based on user type and action
      parameters: []
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/ProductDetailPublic"
      tags:
        - products
    post:
      operationId: products_feedback_create
      summary:
        "A viewset for the Product model that provides the following <b>extra</b>
        actions:"
      description: |-
        - `feedback`: Get or add feedbacks for a product

        It also, provides different serializers based on user type and action
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/ProductDetailPublic"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/ProductDetailPublic"
      tags:
        - products
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /sizes/:
    get:
      operationId: sizes_list
      summary: A viewset for the Size model
      description:
        It allows all users to read the sizes but only admin users can
        create, update or delete them
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
      responses:
        "200":
          description: ""
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: "#/definitions/Size"
      tags:
        - sizes
    post:
      operationId: sizes_create
      summary: A viewset for the Size model
      description:
        It allows all users to read the sizes but only admin users can
        create, update or delete them
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/Size"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/Size"
      tags:
        - sizes
    parameters: []
  /sizes/{id}/:
    get:
      operationId: sizes_read
      summary: A viewset for the Size model
      description:
        It allows all users to read the sizes but only admin users can
        create, update or delete them
      parameters: []
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Size"
      tags:
        - sizes
    put:
      operationId: sizes_update
      summary: A viewset for the Size model
      description:
        It allows all users to read the sizes but only admin users can
        create, update or delete them
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/Size"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Size"
      tags:
        - sizes
    patch:
      operationId: sizes_partial_update
      summary: A viewset for the Size model
      description:
        It allows all users to read the sizes but only admin users can
        create, update or delete them
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/Size"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Size"
      tags:
        - sizes
    delete:
      operationId: sizes_delete
      summary: A viewset for the Size model
      description:
        It allows all users to read the sizes but only admin users can
        create, update or delete them
      parameters: []
      responses:
        "204":
          description: ""
      tags:
        - sizes
    parameters:
      - name: id
        in: path
        description: A UUID string identifying this Size.
        required: true
        type: string
        format: uuid
  /users/:
    get:
      operationId: users_list
      description: A view set for admin dashboard to manage users
      parameters:
        - name: search
          in: query
          description: A search term.
          required: false
          type: string
        - name: is_active
          in: query
          description: is_active
          required: false
          type: string
        - name: profile__role
          in: query
          description: profile__role
          required: false
          type: string
          enum:
            - admin
            - customer
            - provider
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
      responses:
        "200":
          description: ""
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: "#/definitions/User"
      tags:
        - users
    post:
      operationId: users_create
      description: A view set for admin dashboard to manage users
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/User"
      tags:
        - users
    parameters: []
  /users/{id}/:
    get:
      operationId: users_read
      description: A view set for admin dashboard to manage users
      parameters: []
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/User"
      tags:
        - users
    put:
      operationId: users_update
      description: A view set for admin dashboard to manage users
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/User"
      tags:
        - users
    patch:
      operationId: users_partial_update
      description: A view set for admin dashboard to manage users
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/User"
      tags:
        - users
    delete:
      operationId: users_delete
      description: A view set for admin dashboard to manage users
      parameters: []
      responses:
        "204":
          description: ""
      tags:
        - users
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this user.
        required: true
        type: integer
  /users/{id}/feedback/:
    get:
      operationId: users_feedback
      description: List all the feedbacks for a user
      parameters: []
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Feedback"
      tags:
        - users
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this user.
        required: true
        type: integer
  /users/{id}/wishlist/:
    get:
      operationId: users_wishlist
      description: List all the product variants in the whishlist of a user
      parameters: []
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/User"
      tags:
        - users
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this user.
        required: true
        type: integer
  /variants/:
    get:
      operationId: variants_list
      summary:
        "A viewset for the ProductVariant model that provides the following
        extra actions:"
      description: |-
        - `add_to_wishlist`: Add the variant to the current user's wishlist

        - `remove_from_wishlist`: Remove the variant from the current user's wishlist

        - `wished_by`: Get the users who have added this variant to their wishlist

        All users can read the variants but only authenticated users can add or remove them from their wishlist.

        Also, only admin users can create, update or delete them.
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
      responses:
        "200":
          description: ""
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: "#/definitions/Variant"
      tags:
        - variants
    post:
      operationId: variants_create
      summary:
        "A viewset for the ProductVariant model that provides the following
        extra actions:"
      description: |-
        - `add_to_wishlist`: Add the variant to the current user's wishlist

        - `remove_from_wishlist`: Remove the variant from the current user's wishlist

        - `wished_by`: Get the users who have added this variant to their wishlist

        All users can read the variants but only authenticated users can add or remove them from their wishlist.

        Also, only admin users can create, update or delete them.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/WriteVariant"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/WriteVariant"
      tags:
        - variants
    parameters: []
  /variants/{id}/:
    get:
      operationId: variants_read
      summary:
        "A viewset for the ProductVariant model that provides the following
        extra actions:"
      description: |-
        - `add_to_wishlist`: Add the variant to the current user's wishlist

        - `remove_from_wishlist`: Remove the variant from the current user's wishlist

        - `wished_by`: Get the users who have added this variant to their wishlist

        All users can read the variants but only authenticated users can add or remove them from their wishlist.

        Also, only admin users can create, update or delete them.
      parameters: []
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Variant"
      tags:
        - variants
    put:
      operationId: variants_update
      summary:
        "A viewset for the ProductVariant model that provides the following
        extra actions:"
      description: |-
        - `add_to_wishlist`: Add the variant to the current user's wishlist

        - `remove_from_wishlist`: Remove the variant from the current user's wishlist

        - `wished_by`: Get the users who have added this variant to their wishlist

        All users can read the variants but only authenticated users can add or remove them from their wishlist.

        Also, only admin users can create, update or delete them.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/WriteVariant"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/WriteVariant"
      tags:
        - variants
    patch:
      operationId: variants_partial_update
      summary:
        "A viewset for the ProductVariant model that provides the following
        extra actions:"
      description: |-
        - `add_to_wishlist`: Add the variant to the current user's wishlist

        - `remove_from_wishlist`: Remove the variant from the current user's wishlist

        - `wished_by`: Get the users who have added this variant to their wishlist

        All users can read the variants but only authenticated users can add or remove them from their wishlist.

        Also, only admin users can create, update or delete them.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/WriteVariant"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/WriteVariant"
      tags:
        - variants
    delete:
      operationId: variants_delete
      summary:
        "A viewset for the ProductVariant model that provides the following
        extra actions:"
      description: |-
        - `add_to_wishlist`: Add the variant to the current user's wishlist

        - `remove_from_wishlist`: Remove the variant from the current user's wishlist

        - `wished_by`: Get the users who have added this variant to their wishlist

        All users can read the variants but only authenticated users can add or remove them from their wishlist.

        Also, only admin users can create, update or delete them.
      parameters: []
      responses:
        "204":
          description: ""
      tags:
        - variants
    parameters:
      - name: id
        in: path
        description: A UUID string identifying this Product Variant.
        required: true
        type: string
        format: uuid
  /variants/{id}/add-to-wishlist/:
    get:
      operationId: variants_add_to_wishlist
      description: Add this variant to the current user's wishlist
      parameters: []
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/WriteVariant"
      tags:
        - variants
    parameters:
      - name: id
        in: path
        description: A UUID string identifying this Product Variant.
        required: true
        type: string
        format: uuid
  /variants/{id}/remove-from-wishlist/:
    get:
      operationId: variants_remove_from_wishlist
      description: Remove this variant from the current user's wishlist
      parameters: []
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/WriteVariant"
      tags:
        - variants
    parameters:
      - name: id
        in: path
        description: A UUID string identifying this Product Variant.
        required: true
        type: string
        format: uuid
  /variants/{id}/wished-by/:
    get:
      operationId: variants_wished_by
      description: Get the users who have added this variant to their wishlist
      parameters: []
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/WriteVariant"
      tags:
        - variants
    parameters:
      - name: id
        in: path
        description: A UUID string identifying this Product Variant.
        required: true
        type: string
        format: uuid
definitions:
  TokenObtainPair:
    required:
      - username
      - password
    type: object
    properties:
      username:
        title: Username
        type: string
        minLength: 1
      password:
        title: Password
        type: string
        minLength: 1
  TokenRefresh:
    required:
      - refresh
    type: object
    properties:
      refresh:
        title: Refresh
        type: string
        minLength: 1
      access:
        title: Access
        type: string
        readOnly: true
        minLength: 1
  Category:
    required:
      - name
      - division
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      url:
        title: Url
        type: string
        format: uri
        readOnly: true
      created_at:
        title: Created at
        type: string
        format: date-time
        readOnly: true
      updated_at:
        title: Updated at
        type: string
        format: date-time
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 64
        minLength: 1
      description:
        title: Description
        type: string
      division:
        title: Division
        type: string
        format: uuid
  CollectionProduct:
    required:
      - name
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      url:
        title: Url
        type: string
        format: uri
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 64
        minLength: 1
      description:
        title: Description
        type: string
      category:
        title: Category
        type: string
        readOnly: true
  ReadCollection:
    required:
      - name
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      url:
        title: Url
        type: string
        format: uri
        readOnly: true
      products:
        type: array
        items:
          $ref: "#/definitions/CollectionProduct"
        readOnly: true
      created_at:
        title: Created at
        type: string
        format: date-time
        readOnly: true
      updated_at:
        title: Updated at
        type: string
        format: date-time
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 64
        minLength: 1
      description:
        title: Description
        type: string
  WriteCollection:
    required:
      - name
      - products
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      created_at:
        title: Created at
        type: string
        format: date-time
        readOnly: true
      updated_at:
        title: Updated at
        type: string
        format: date-time
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 64
        minLength: 1
      description:
        title: Description
        type: string
      products:
        type: array
        items:
          type: string
          format: uuid
        uniqueItems: true
  Color:
    required:
      - color1_name
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      url:
        title: Url
        type: string
        format: uri
        readOnly: true
      created_at:
        title: Created at
        type: string
        format: date-time
        readOnly: true
      updated_at:
        title: Updated at
        type: string
        format: date-time
        readOnly: true
      color1_name:
        title: First color name
        type: string
        maxLength: 20
        minLength: 1
      color1_value:
        title: First color value
        type: string
        maxLength: 7
        x-nullable: true
      color2_name:
        title: Second color name
        type: string
        maxLength: 20
        x-nullable: true
      color2_value:
        title: Second color value
        description: a second color for dual-color products
        type: string
        maxLength: 7
        x-nullable: true
  Division:
    required:
      - name
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      url:
        title: Url
        type: string
        format: uri
        readOnly: true
      created_at:
        title: Created at
        type: string
        format: date-time
        readOnly: true
      updated_at:
        title: Updated at
        type: string
        format: date-time
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 64
        minLength: 1
  Feedback:
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      created_at:
        title: Created at
        type: string
        format: date-time
        readOnly: true
      updated_at:
        title: Updated at
        type: string
        format: date-time
        readOnly: true
      rate:
        title: Rate
        description: The rate of the product from 1 to 5 (stars). 0 means no rate.
        type: integer
        maximum: 5
        minimum: 0
      comment:
        title: Comment
        description: The comment of the user.
        type: string
      customer:
        title: Customer
        type: string
        format: uuid
        readOnly: true
      product:
        title: Product
        description: The product that the feedback is for.
        type: string
        format: uuid
        readOnly: true
  Img:
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      url:
        title: Url
        type: string
        format: uri
        readOnly: true
      created_at:
        title: Created at
        type: string
        format: date-time
        readOnly: true
      updated_at:
        title: Updated at
        type: string
        format: date-time
        readOnly: true
      src:
        title: Src
        type: string
        readOnly: true
        format: uri
      alt:
        title: Alt
        type: string
        maxLength: 255
  OrderItem:
    required:
      - product_variant
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      created_at:
        title: Created at
        type: string
        format: date-time
        readOnly: true
      updated_at:
        title: Updated at
        type: string
        format: date-time
        readOnly: true
      quantity:
        title: Quantity
        type: integer
        maximum: 2147483647
        minimum: 0
      order:
        title: Order
        type: string
        format: uuid
        readOnly: true
      product_variant:
        title: Product variant
        type: string
        format: uuid
  Order:
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      items:
        type: array
        items:
          $ref: "#/definitions/OrderItem"
        readOnly: true
      url:
        title: Url
        type: string
        format: uri
        readOnly: true
      created_at:
        title: Created at
        type: string
        format: date-time
        readOnly: true
      updated_at:
        title: Updated at
        type: string
        format: date-time
        readOnly: true
      status:
        title: Status
        type: string
        enum:
          - pending
          - processing
          - closed
          - cenceled
        readOnly: true
      total:
        title: Total
        type: string
        format: decimal
        readOnly: true
      cancel_reason:
        title: Cancel reason
        type: string
      profile:
        title: Profile
        type: string
        format: uuid
        readOnly: true
      discount_codes:
        description: List of discount codes that are applied to this order
        type: array
        items:
          description: List of discount codes that are applied to this order
          type: string
          format: uuid
        uniqueItems: true
  CategoryNested:
    required:
      - name
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      url:
        title: Url
        type: string
        format: uri
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 64
        minLength: 1
  ProductListPublic:
    required:
      - name
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      url:
        title: Url
        type: string
        format: uri
        readOnly: true
      category:
        $ref: "#/definitions/CategoryNested"
      image:
        title: Image
        type: string
        readOnly: true
      price:
        title: Price
        type: string
        readOnly: true
      in_stock:
        title: In stock
        type: string
        readOnly: true
      feedback:
        title: Feedback
        type: string
        format: uri
        readOnly: true
      created_at:
        title: Created at
        type: string
        format: date-time
        readOnly: true
      updated_at:
        title: Updated at
        type: string
        format: date-time
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 64
        minLength: 1
      description:
        title: Description
        type: string
      tags:
        title: Tags
        description: comma separated tags for search purpuses
        type: string
  Size:
    required:
      - name
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      url:
        title: Url
        type: string
        format: uri
        readOnly: true
      created_at:
        title: Created at
        type: string
        format: date-time
        readOnly: true
      updated_at:
        title: Updated at
        type: string
        format: date-time
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 3
        minLength: 1
  ProductDetailVariant:
    required:
      - cost
      - price
      - quantity
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      color:
        $ref: "#/definitions/Color"
      size:
        $ref: "#/definitions/Size"
      image:
        $ref: "#/definitions/Img"
      created_at:
        title: Created at
        type: string
        format: date-time
        readOnly: true
      updated_at:
        title: Updated at
        type: string
        format: date-time
        readOnly: true
      cost:
        title: Cost
        type: string
        format: decimal
      price:
        title: Price
        type: string
        format: decimal
      quantity:
        title: Quantity
        type: integer
        maximum: 32767
        minimum: 0
      sort_order:
        title: Sort order
        type: integer
        maximum: 2147483647
        minimum: -2147483648
  ProductDetailPublic:
    required:
      - name
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      url:
        title: Url
        type: string
        format: uri
        readOnly: true
      category:
        $ref: "#/definitions/CategoryNested"
      image:
        title: Image
        type: string
        readOnly: true
      price:
        title: Price
        type: string
        readOnly: true
      in_stock:
        title: In stock
        type: string
        readOnly: true
      feedback:
        type: array
        items:
          $ref: "#/definitions/Feedback"
        readOnly: true
      variants:
        type: array
        items:
          $ref: "#/definitions/ProductDetailVariant"
        readOnly: true
      created_at:
        title: Created at
        type: string
        format: date-time
        readOnly: true
      updated_at:
        title: Updated at
        type: string
        format: date-time
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 64
        minLength: 1
      description:
        title: Description
        type: string
      tags:
        title: Tags
        description: comma separated tags for search purpuses
        type: string
  Profile:
    type: object
    properties:
      role:
        title: Role
        type: string
        enum:
          - admin
          - customer
          - provider
      phone_number:
        title: Phone number
        type: string
        maxLength: 15
      avatar_url:
        title: Avatar url
        type: string
        readOnly: true
      avatar:
        title: Avatar
        type: string
        readOnly: true
        x-nullable: true
        format: uri
      note:
        title: Note
        type: string
      wishlist:
        type: array
        items:
          type: string
          format: uuid
        readOnly: true
        uniqueItems: true
  User:
    required:
      - username
      - password
      - profile
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      url:
        title: Url
        type: string
        format: uri
        readOnly: true
      date_joined:
        title: Date joined
        type: string
        format: date-time
        readOnly: true
      last_login:
        title: Last login
        type: string
        format: date-time
        readOnly: true
        x-nullable: true
      username:
        title: Username
        description:
          Required. 150 characters or fewer. Letters, digits and @/./+/-/_
          only.
        type: string
        pattern: ^[\w.@+-]+$
        maxLength: 150
        minLength: 1
      email:
        title: Email address
        type: string
        format: email
        maxLength: 254
      password:
        title: Password
        type: string
        maxLength: 128
        minLength: 1
      first_name:
        title: First name
        type: string
        maxLength: 150
      last_name:
        title: Last name
        type: string
        maxLength: 150
      is_active:
        title: Active
        description:
          Designates whether this user should be treated as active. Unselect
          this instead of deleting accounts.
        type: boolean
      profile:
        $ref: "#/definitions/Profile"
  Variant:
    required:
      - cost
      - price
      - quantity
      - product
      - image
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      url:
        title: Url
        type: string
        format: uri
        readOnly: true
      created_at:
        title: Created at
        type: string
        format: date-time
        readOnly: true
      updated_at:
        title: Updated at
        type: string
        format: date-time
        readOnly: true
      cost:
        title: Cost
        type: string
        format: decimal
      price:
        title: Price
        type: string
        format: decimal
      quantity:
        title: Quantity
        type: integer
        maximum: 32767
        minimum: 0
      sort_order:
        title: Sort order
        type: integer
        default: 1
        maximum: 2147483647
        minimum: -2147483648
      product:
        title: Product
        type: string
        format: uuid
      color:
        title: Color
        type: string
        format: uuid
        x-nullable: true
      size:
        title: Size
        type: string
        format: uuid
        x-nullable: true
      image:
        title: Image
        type: string
        format: uuid
  WriteVariant:
    required:
      - cost
      - price
      - quantity
      - product
      - image
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      url:
        title: Url
        type: string
        format: uri
        readOnly: true
      created_at:
        title: Created at
        type: string
        format: date-time
        readOnly: true
      updated_at:
        title: Updated at
        type: string
        format: date-time
        readOnly: true
      cost:
        title: Cost
        type: string
        format: decimal
      price:
        title: Price
        type: string
        format: decimal
      quantity:
        title: Quantity
        type: integer
        maximum: 32767
        minimum: 0
      sort_order:
        title: Sort order
        type: integer
        default: 1
        maximum: 2147483647
        minimum: -2147483648
      product:
        title: Product
        type: string
        format: uuid
      color:
        title: Color
        type: string
        format: uuid
        x-nullable: true
      size:
        title: Size
        type: string
        format: uuid
        x-nullable: true
      image:
        title: Image
        type: string
        format: uuid
